name: Build and Deploy Streamlit App

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  pages: write
  id-token: write
  deployments: write

jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: app
          - os: windows-latest
            output_name: app.exe
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev python3-dev protobuf-compiler
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==6.3.0
        pip install streamlit==1.31.1
        pip install -r requirements.txt
        pip install protobuf==3.20.0 --no-deps
    
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller==6.3.0
        pip install -r requirements.txt
        pip install protobuf==3.20.0 --no-deps

    
    - name: Generate Protos (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python generate_protos.py
    
    - name: Generate Protos (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        python generate_protos.py
    
    
    - name: Build executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller app.spec
    
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller app.spec
    
    - name: Rename artifacts
      shell: bash
      run: |
        cd dist
        mv -n app* "${{ matrix.output_name }}"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-${{ matrix.os }}
        path: dist/${{ matrix.output_name }}
        
  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app-*/app*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
