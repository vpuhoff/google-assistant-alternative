name: Build and Deploy Streamlit App




on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  id-token: write
  deployments: write
  discussions: write
  pull-requests: write
  packages: write


jobs:
  build-and-release:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            output_name: app
          - os: windows-latest
            output_name: app.exe
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y portaudio19-dev python3-dev protobuf-compiler
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'
    
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install streamlit
        pip install -r requirements.txt
        pip install protobuf==3.20.0 --no-deps
        pip install grpcio-tools==1.48.2
    
    - name: Install dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install streamlit
        pip install -r requirements.txt
        pip install grpcio-tools==1.48.2
    
    - name: Generate Protos (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        python generate_protos.py
    
    - name: Generate Protos (Windows)
      if: matrix.os == 'windows-latest'
      shell: cmd
      run: |
        python generate_protos.py
    
    - name: Create Streamlit config
      shell: bash
      run: |
        mkdir -p ~/.streamlit
        echo '[server]
        headless = true
        port = 8501' > ~/.streamlit/config.toml
    
    - name: Build executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile \
          --hidden-import=PIL._tkinter_finder \
          --hidden-import=google.protobuf.internal.builder \
          --add-data "$(python -c 'import streamlit; print(streamlit.__path__[0])')/:streamlit" \
          --add-data "./proto:./proto" \
          app.py
    
    - name: Build executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $streamlitPath = python -c "import streamlit; print(streamlit.__path__[0])"
        pyinstaller --onefile --add-data "$streamlitPath;streamlit" --add-data "proto;proto" --hidden-import=google.protobuf.internal.builder app.py
    
    - name: Rename artifacts
      shell: bash
      run: |
        cd dist
        mv app* ${{ matrix.output_name }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: app-${{ matrix.os }}
        path: dist/${{ matrix.output_name }}
        
  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Download all artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          app-*/app*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
